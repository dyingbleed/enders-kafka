- name: ZOOKEEPER - create zk group
  group:
    name: zk
    system: yes
    state: present
- name: ZOOKEEPER - create zk user
  user:
    name: zk
    groups: zk
    append: yes
    system: yes
    state: present
- name: ZOOKEEPER - ensure dirs
  file:
    path: "{{ item }}"
    state: directory
    owner: zk
    group: zk
    mode: '0755'
  with_items: 
    - "{{ zookeeper_data_dir }}"
    - "{{ zookeeper_log_dir }}"
- name: ZOOKEEPER - myid
  template:
    src: myid.j2
    dest: "{{ zookeeper_data_dir }}/myid"
    owner: zk
    group: zk
    mode: '0644'
- block:
  - name: ZOOKEEPER - download zookeeper
    get_url:
      url: http://archive.apache.org/dist/zookeeper/zookeeper-{{ zookeeper_version }}/apache-zookeeper-{{ zookeeper_version }}-bin.tar.gz
      dest: /tmp
      checksum: "{{ zookeeper_checksum }}"
  - name: ZOOKEEPER - unarchive zookeeper
    unarchive:
      src: /tmp/apache-zookeeper-{{ zookeeper_version }}-bin.tar.gz
      dest: /opt
      remote_src: yes
      owner: zk
      group: zk
  when: "'zookeeper.service' not in services"
- name: ZOOKEEPER - link zookeeper home
  file:
    src: /opt/apache-zookeeper-{{ zookeeper_version }}-bin
    dest: "{{ zookeeper_home }}"
    owner: zk
    group: zk
    state: link
- name: ZOOKEEPER - copy config files
  template:
    src: "{{ item }}"
    dest: "{{ zookeeper_home }}/conf/{{ item[:-3] }}"
    owner: zk
    group: zk
    mode: '0644'
  with_items: 
    - zoo.cfg.j2
    - zookeeper-env.sh.j2
  notify: restart zookeeper
- name: ZOOKEEPER - zookeeper service
  template:
    src: zookeeper.service.j2
    dest: /etc/systemd/system/zookeeper.service
    owner: root
    group: root
    mode: 0644
  notify: restart zookeeper